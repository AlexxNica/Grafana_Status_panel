{"version":3,"sources":["../src/status_ctrl.js"],"names":["MetricsPanelCtrl","_","TimeSeries","coreModule","StatusPluginCtrl","$scope","$injector","$log","$filter","annotationsSrv","filter","aggregations","panel","flipTime","events","on","onRender","bind","postRefresh","onDataError","onDataReceived","onInitEditMode","measurements","targets","duplicates","measurement","hide","each","m","res","alias","target","length","addEditorTab","$panelContainer","find","css","$panelContoller","height","setElementHeight","clusterName","displayName","replace","RegExp","namePrefix","flipCard","addClass","removeClass","crit","warn","display","series","s","thresholds","parseThresholds","inverted","url","value","aggregation","max","datapoints","point","min","display_value","push","isGrayColor","autoFlip","parseUri","links","uri","dashUri","params","undefined","dataList","map","seriesHandler","render","seriesData","timeoutId","clearInterval","setInterval","toggleClass","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"status_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from \"app/plugins/sdk\";\r\nimport \"app/plugins/panel/graph/legend\";\r\nimport \"app/plugins/panel/graph/series_overrides_ctrl\";\r\nimport _ from \"lodash\";\r\nimport TimeSeries from \"app/core/time_series2\";\r\nimport coreModule from \"app/core/core_module\"\r\n\r\nimport './css/status_panel.css!';\r\n\r\nexport class StatusPluginCtrl extends MetricsPanelCtrl {\r\n  /** @ngInject */\r\n  constructor($scope, $injector, $log, $filter, annotationsSrv) {\r\n    super($scope, $injector);\r\n\r\n    //this.log = $log.debug;\r\n    this.filter = $filter;\r\n\r\n    this.aggregations = ['None', 'Max', 'Min', 'Sum'];\r\n\r\n    this.panel.flipTime = this.panel.flipTime || 5;\r\n\r\n    /** Bind events to functions **/\r\n    this.events.on('render', this.onRender.bind(this));\r\n    this.events.on('refresh', this.postRefresh.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n  }\r\n\r\n  postRefresh() {\r\n    this.measurements = this.panel.targets;\r\n\r\n    /** Duplicate alias validation **/\r\n    this.duplicates = false;\r\n\r\n    this.measurements = _.filter(this.measurements, (measurement) => {\r\n      return !measurement.hide;\r\n    });\r\n\r\n    _.each(this.measurements, (m) => {\r\n      let res = _.filter(this.measurements, (measurement) => {\r\n        return (m.alias == measurement.alias || (m.target == measurement.target && m.target)) && !m.hide;\r\n      });\r\n\r\n      if (res.length > 1) {\r\n        this.duplicates = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Options', 'public/plugins/vonage-status-panel/editor.html', 2);\r\n  }\r\n\r\n  setElementHeight() {\r\n    this.$panelContainer.find('.status-panel').css('height', this.$panelContoller.height + 'px');\r\n  }\r\n\r\n  onRender() {\r\n    this.setElementHeight();\r\n\r\n    if (this.panel.clusterName) {\r\n      this.panel.displayName =\r\n        this.filter('interpolateTemplateVars')(this.panel.clusterName, this.$scope)\r\n          .replace(new RegExp(this.panel.namePrefix, 'i'), '');\r\n    } else {\r\n      this.panel.displayName = \"\";\r\n    }\r\n\r\n    if(this.panel.flipCard){\r\n      this.$panelContainer.addClass(\"effect-hover\");\r\n    } else {\r\n      this.$panelContainer.removeClass(\"effect-hover\");\r\n    }\r\n\r\n\r\n    let targets = this.panel.targets;\r\n\r\n    this.crit = [];\r\n    this.warn = [];\r\n    this.display = [];\r\n\r\n    _.each(this.series, (s) => {\r\n      let target = _.find(targets, (target) => {\r\n        return target.alias == s.alias || target.target == s.alias;\r\n      });\r\n\r\n      if (!target) {\r\n        return;\r\n      }\r\n\r\n      s.thresholds = StatusPluginCtrl.parseThresholds(target);\r\n      s.inverted = s.thresholds.crit < s.thresholds.warn;\r\n      s.display = target.display;\r\n      s.alias = target.alias;\r\n      s.url = target.url;\r\n\r\n      let value;\r\n\r\n      switch (target.aggregation) {\r\n        case 'Max':\r\n          value = _.max(s.datapoints, (point) => { return point[0]; })[0];\r\n          break;\r\n        case 'Min':\r\n          value = _.min(s.datapoints, (point) => { return point[0]; })[0];\r\n          break;\r\n        case 'Sum':\r\n          value = 0;\r\n          _.each(s.datapoints, (point) => { value += point[0] });\r\n          break;\r\n        default:\r\n          value = s.datapoints[0][0];\r\n      }\r\n\r\n      s.display_value = value;\r\n\r\n      if (!s.inverted) {\r\n        if (value >= s.thresholds.crit) {\r\n          this.crit.push(s);\r\n        } else if (value >= s.thresholds.warn) {\r\n          this.warn.push(s);\r\n        } else if (s.display) {\r\n          this.display.push(s);\r\n        }\r\n      } else {\r\n        if (value <= s.thresholds.crit) {\r\n          this.crit.push(s);\r\n        } else if (value <= s.thresholds.warn) {\r\n          this.warn.push(s);\r\n        } else if (s.display) {\r\n          s.display_value = value;\r\n          this.display.push(s);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.$panelContainer.removeClass('error-state warn-state ok-state gray-state');\r\n\r\n    if (this.crit.length > 0 || this.duplicates) {\r\n      this.$panelContainer.addClass('error-state');\r\n    } else if (this.warn.length > 0) {\r\n      this.$panelContainer.addClass('warn-state');\r\n    } else if(this.series.length == 0 && this.panel.isGrayColor) {\r\n      this.$panelContainer.addClass('gray-state');\r\n    } else {\r\n      this.$panelContainer.addClass('ok-state');\r\n    }\r\n\r\n    this.autoFlip();\r\n    this.parseUri();\r\n  }\r\n\r\n  parseUri() {\r\n    if (this.panel.links && this.panel.links.length > 0) {\r\n      this.uri = this.panel.links[0].dashUri + \"?\" + this.panel.links[0].params;\r\n    } else {\r\n      this.uri = undefined;\r\n    }\r\n  }\r\n\r\n  static parseThresholds(measurement) {\r\n    let res = {};\r\n\r\n    res.warn = measurement.warn;\r\n    res.crit = measurement.crit;\r\n\r\n    return res;\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    this.series = dataList.map(this.seriesHandler.bind(this));\r\n\r\n    this.render();\r\n  }\r\n\r\n  onDataError() {\r\n    this.crit = [];\r\n    this.warn = [];\r\n  }\r\n\r\n  seriesHandler(seriesData) {\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints,\r\n      alias: seriesData.target\r\n    });\r\n\r\n    //series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n\r\n    return series;\r\n  }\r\n\r\n  $onDestroy() {\r\n    if(this.timeoutId) clearInterval(this.timeoutId);\r\n  }\r\n\r\n  autoFlip() {\r\n    if(this.timeoutId) clearInterval(this.timeoutId);\r\n    if (this.panel.flipCard && (this.crit.length > 0 || this.warn.length > 0)) {\r\n      this.timeoutId = setInterval(() => {\r\n        this.$panelContainer.toggleClass(\"flipped\");\r\n      }, this.panel.flipTime * 1000);\r\n    }\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    this.$panelContainer = elem.find('.panel-container');\r\n    this.$panelContainer.addClass(\"st-card\");\r\n    this.$panelContoller = ctrl;\r\n  }\r\n}\r\n\r\nStatusPluginCtrl.templateUrl = 'module.html';\r\n"]}