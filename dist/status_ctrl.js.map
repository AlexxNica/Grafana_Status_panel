{"version":3,"sources":["../src/status_ctrl.js"],"names":["MetricsPanelCtrl","_","TimeSeries","coreModule","StatusPluginCtrl","$scope","$injector","$log","$filter","annotationsSrv","filter","aggregations","events","on","onRender","bind","postRefresh","onDataError","onDataReceived","onInitEditMode","measurements","panel","targets","duplicates","measurement","hide","each","m","res","alias","target","length","addEditorTab","$panelContainer","find","css","$panelContoller","height","setElementHeight","clusterName","displayName","replace","RegExp","namePrefix","crit","warn","display","series","s","thresholds","parseThresholds","inverted","url","value","aggregation","stats","max","min","total","avg","datapoints","display_value","push","removeClass","addClass","isGrayColor","parseUri","links","uri","dashUri","params","undefined","dataList","map","seriesHandler","render","seriesData","flotpairs","getFlotPairs","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"status_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from \"app/plugins/sdk\";\nimport \"app/plugins/panel/graph/legend\";\nimport \"app/plugins/panel/graph/series_overrides_ctrl\";\nimport _ from \"lodash\";\nimport TimeSeries from \"app/core/time_series2\";\nimport coreModule from \"app/core/core_module\"\n\nimport './css/status_panel.css!';\n\nexport class StatusPluginCtrl extends MetricsPanelCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, $log, $filter, annotationsSrv) {\n    super($scope, $injector);\n\n    //this.log = $log.debug;\n    this.filter = $filter;\n\n    this.aggregations = ['Last', 'First', 'Max', 'Min', 'Sum', 'Avg'];\n\n    /** Bind events to functions **/\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('refresh', this.postRefresh.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  postRefresh() {\n    this.measurements = this.panel.targets;\n\n    /** Duplicate alias validation **/\n    this.duplicates = false;\n\n    this.measurements = _.filter(this.measurements, (measurement) => {\n      return !measurement.hide;\n    });\n\n    _.each(this.measurements, (m) => {\n      let res = _.filter(this.measurements, (measurement) => {\n        return (m.alias == measurement.alias || (m.target == measurement.target && m.target)) && !m.hide;\n      });\n\n      if (res.length > 1) {\n        this.duplicates = true;\n      }\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/vonage-status-panel/editor.html', 2);\n  }\n\n  setElementHeight() {\n    this.$panelContainer.find('.status-panel').css('height', this.$panelContoller.height + 'px');\n  }\n\n  onRender() {\n    this.setElementHeight();\n\n    if (this.panel.clusterName) {\n      this.panel.displayName =\n        this.filter('interpolateTemplateVars')(this.panel.clusterName, this.$scope)\n          .replace(new RegExp(this.panel.namePrefix, 'i'), '');\n    } else {\n      this.panel.displayName = \"\";\n    }\n\n\n\n    let targets = this.panel.targets;\n\n    this.crit = [];\n    this.warn = [];\n    this.display = [];\n\n    _.each(this.series, (s) => {\n      let target = _.find(targets, (target) => {\n        return target.alias == s.alias || target.target == s.alias;\n      });\n\n      if (!target) {\n        return;\n      }\n\n      s.thresholds = StatusPluginCtrl.parseThresholds(target);\n      s.inverted = s.thresholds.crit < s.thresholds.warn;\n      s.display = target.display;\n      s.alias = target.alias;\n      s.url = target.url;\n\n      let value;\n\n      switch (target.aggregation) {\n        case 'Max':\n          value = s.stats.max;\n          break;\n        case 'Min':\n          value = s.stats.min;\n          break;\n        case 'Sum':\n          value = s.stats.total;\n          break;\n        case 'Avg':\n          value = s.stats.avg;\n          break;\n        case 'First':\n          value = s.datapoints[0][0];\n          break;\n        default:\n          value = s.datapoints[s.datapoints.length - 1][0];\n      }\n\n      s.display_value = value;\n\n      if (!s.inverted) {\n        if (value >= s.thresholds.crit) {\n          this.crit.push(s);\n        } else if (value >= s.thresholds.warn) {\n          this.warn.push(s);\n        } else if (s.display) {\n          this.display.push(s);\n        }\n      } else {\n        if (value <= s.thresholds.crit) {\n          this.crit.push(s);\n        } else if (value <= s.thresholds.warn) {\n          this.warn.push(s);\n        } else if (s.display) {\n          s.display_value = value;\n          this.display.push(s);\n        }\n      }\n    });\n\n    this.$panelContainer.removeClass('error-state warn-state ok-state gray-state');\n\n    if (this.crit.length > 0 || this.duplicates) {\n      this.$panelContainer.addClass('error-state');\n    } else if (this.warn.length > 0) {\n      this.$panelContainer.addClass('warn-state');\n    } else if(this.series.length == 0 && this.panel.isGrayColor) {\n      this.$panelContainer.addClass('gray-state');\n    } else {\n      this.$panelContainer.addClass('ok-state');\n    }\n\n    this.parseUri();\n  }\n\n  parseUri() {\n    if (this.panel.links && this.panel.links.length > 0) {\n      this.uri = this.panel.links[0].dashUri + \"?\" + this.panel.links[0].params;\n    } else {\n      this.uri = undefined;\n    }\n  }\n\n  static parseThresholds(measurement) {\n    let res = {};\n\n    res.warn = measurement.warn;\n    res.crit = measurement.crit;\n\n    return res;\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n\n    this.render();\n  }\n\n  onDataError() {\n    this.crit = [];\n    this.warn = [];\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    series.flotpairs = series.getFlotPairs(\"connected\");\n\n    return series;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.$panelContainer = elem.find('.panel-container');\n    this.$panelContoller = ctrl;\n  }\n}\n\nStatusPluginCtrl.templateUrl = 'module.html';\n"]}